<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>biml</string>
		<string>csbiml</string>
		<string>sqlbiml</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^\s*#\s*region|^\s*/\*|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))|^\s*&lt;#</string>
	<key>foldingStopMarker</key>
	<string>^\s*#\s*endregion|^\s*\*/|^\s*\}|^\s*#&gt;</string>
	<key>name</key>
	<string>BIML</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#csharp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#xml</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#biml</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tsql</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>Cdata</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;!\[CDATA\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.cdata.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(]]&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.cdata.xml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.cdata.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#biml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#csharp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tsql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>EntityDecl</key>
		<dict>
			<key>begin</key>
			<string>(&lt;!)(ENTITY)\s+(%\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\s+(?:SYSTEM|PUBLIC)\s+)?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.xml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.entity.xml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.entity.xml</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.entity.xml</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.entitytype.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#doublequotedString</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#singlequotedString</string>
				</dict>
			</array>
		</dict>
		<key>bare-ampersand</key>
		<dict>
			<key>match</key>
			<string>&amp;</string>
			<key>name</key>
			<string>invalid.illegal.bad-ampersand.xml</string>
		</dict>
		<key>biml</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#biml-expression-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-class-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-directive-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-control-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-direct-input</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-comment-block</string>
				</dict>
			</array>
		</dict>
		<key>biml-class-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;#\+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.classblock.biml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(#&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.classblock.biml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>class.block.biml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#csharp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>biml-comment-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;#\*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.commentblock.biml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\*#&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.commentblock.biml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.biml</string>
				</dict>
			</array>
		</dict>
		<key>biml-control-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;#[^@=\+\*])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.controlblock.biml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(#&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.controlblock.biml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>control.block.biml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#csharp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>biml-direct-input</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;DirectInput&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directinputblock.biml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&lt;/DirectInput&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directinputblock.biml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>directinput.block.biml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#biml-expression-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#biml-control-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tsql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>biml-directive-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;#@)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directiveblock.biml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(#&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.directiveblock.biml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>directive.block.biml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tagStuff</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>biml-expression-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;#=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.expressionblock.biml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(#&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.expressionblock.biml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>expression.block.biml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#csharp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>csharp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#csharp-core</string>
				</dict>
			</array>
		</dict>
		<key>csharp-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#csharp-brackets-round</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-brackets-square</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-brackets-curly</string>
				</dict>
			</array>
		</dict>
		<key>csharp-brackets-round</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.csharp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.csharp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.round</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#csharp-expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>csharp-brackets-square</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.csharp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.square.csharp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.braces.square</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#csharp-expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>csharp-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.csharp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.csharp</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.csharp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.csharp</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.csharp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.csharp</string>
				</dict>
			</array>
		</dict>
		<key>csharp-constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
					<key>name</key>
					<string>constant.numeric.source.cs</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.source.cs</string>
						</dict>
					</dict>
					<key>match</key>
					<string>@"([^"]|"")*"</string>
					<key>name</key>
					<string>string.quoted.double.literal.source.cs</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.source.cs</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.source.cs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.source.cs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.source.cs</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.source.cs</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.source.cs</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.source.cs</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.source.cs</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>csharp-core</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#csharp-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-brackets</string>
				</dict>
			</array>
		</dict>
		<key>csharp-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#csharp-literal-keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-constants</string>
				</dict>
			</array>
		</dict>
		<key>csharp-literal-for</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(for|foreach)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.statement.iteration.csharp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.round.csharp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.for.csharp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.brace.round.csharp</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#csharp-expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>csharp-literal-keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#csharp-literal-keywords-statements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-literal-for</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-literal-switch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#csharp-literal-keywords-types</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(ascending|by|descending|equals|from|group|in|into|join|let|on|orderby|select|where)\b</string>
					<key>name</key>
					<string>keyword.linq.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(as|await|is|sizeof|stackalloc|typeof)\b</string>
					<key>name</key>
					<string>keyword.operator.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(abstract|async|const|event|extern|internal|new|override|partial|private|protected|public|readonly|sealed|static|unsafe|virtual|volatile)\b</string>
					<key>name</key>
					<string>keyword.modifiers.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(out|params|ref)\b</string>
					<key>name</key>
					<string>keyword.method.parameters.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(alias|extern|namespace|using)\b</string>
					<key>name</key>
					<string>keyword.namespace.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(explicit|implicit|operator)\b</string>
					<key>name</key>
					<string>keyword.conversion.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(base|this)\b</string>
					<key>name</key>
					<string>keyword.access.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(default|false|null|true)\b</string>
					<key>name</key>
					<string>keyword.literal.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(add|get|global|remove|set|value|yield)\b</string>
					<key>name</key>
					<string>keyword.contextual.source.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)#\s*\b(if|else|elif|endif|define|undef|warning|error|line|region|endregion|pragma|pragma warning|pragma checksum)\b</string>
					<key>name</key>
					<string>keyword.preprocessor.source.csharp</string>
				</dict>
			</array>
		</dict>
		<key>csharp-literal-keywords-statements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(fixed|lock)\b</string>
					<key>name</key>
					<string>keyword.control.other.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(if|else)\b</string>
					<key>name</key>
					<string>keyword.statement.selection.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(catch|finally|throw|try)\b</string>
					<key>name</key>
					<string>keyword.statement.exception.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(do|while)\b</string>
					<key>name</key>
					<string>keyword.statement.iteration.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(break|continue|goto|return)\b</string>
					<key>name</key>
					<string>keyword.statement.jump.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(checked|unchecked)\b</string>
					<key>name</key>
					<string>keyword.statement.checked.csharp</string>
				</dict>
			</array>
		</dict>
		<key>csharp-literal-keywords-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(bool|byte|char|decimal|double|enum|float|int|long|sbyte|short|struct|uint|ulong|ushort)\b</string>
					<key>name</key>
					<string>keyword.types.value.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(class|delegate|dynamic|interface|object|string)\b</string>
					<key>name</key>
					<string>keyword.types.reference.csharp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(var|void)\b</string>
					<key>name</key>
					<string>keyword.types.other.csharp</string>
				</dict>
			</array>
		</dict>
		<key>csharp-literal-switch</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(switch)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.statement.selection.csharp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.brace.curly.csharp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.switch.csharp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#round-brackets</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.brace.curly.csharp</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?&lt;!\.)\b(case|default)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.statement.selection.csharp</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=:)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#csharp-expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>doublequotedString</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-expression-block</string>
				</dict>
			</array>
		</dict>
		<key>entity</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(&amp;)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
			<key>name</key>
			<string>constant.character.entity.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#biml</string>
				</dict>
			</array>
		</dict>
		<key>internalSubset</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>name</key>
			<string>meta.internalsubset.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#EntityDecl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameterEntity</string>
				</dict>
			</array>
		</dict>
		<key>parameterEntity</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.xml</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)</string>
			<key>name</key>
			<string>constant.character.parameter-entity.xml</string>
		</dict>
		<key>singlequotedString</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.xml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-expression-block</string>
				</dict>
			</array>
		</dict>
		<key>tagStuff</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.namespace.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.localname.xml</string>
						</dict>
					</dict>
					<key>match</key>
					<string> (?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9]+)=</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doublequotedString</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#singlequotedString</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#biml-expression-block</string>
				</dict>
			</array>
		</dict>
		<key>tsql</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tsql_comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_label_goto</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_table_alias</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_alias_as</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_all</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_regexps</string>
				</dict>
			</array>
		</dict>
		<key>tsql_alias_as</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.alias-as.other.sql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.alias.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=[\w])\s+(as)\s+(\w+)</string>
			<key>name</key>
			<string>meta.alias-as.sql</string>
		</dict>
		<key>tsql_all</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i:^go\s*$)</string>
					<key>name</key>
					<string>support.constant.go.other.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.sql</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:^\s*(create)\s+(aggregate|conversion|database|domain|function|group|(unique\s+)?index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view|proc|procedure)\s+)([#'"`]?)(\w+)</string>
					<key>name</key>
					<string>meta.create.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:^\s*(drop)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view|proc|procedure))</string>
					<key>name</key>
					<string>meta.drop.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.table.sql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.sql</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.cascade.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)</string>
					<key>name</key>
					<string>meta.drop.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.create.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.table.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:^\s*(alter)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view|proc|procedure)\s+)</string>
					<key>name</key>
					<string>meta.alter.sql</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>13</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>14</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>15</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.sql</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>storage.type.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?xi)

				# normal stuff, capture 1
				 \b[^\.](BIDENT|BBRIEF|BCOMMENT|BBOOL|bigint|numeric|bit|smallint|decimal|smallmoney|int|tinyint|money|float|real|date|datetimeoffset|datetime2|smalldatetime|datetime|time|char|varchar|text|nchar|nvarchar|ntext|binary|varbinary|image|cursor|timestamp|hierarchyid|uniqueidentifier|sysname|sql_variant|xml|table|geography|geometry)\b

				# numeric suffix, capture 2 + 3i
				|\b(bit\svarying|character\s(?:varying)?|tinyint|var\schar|float|interval)\((\d+)\)

				# optional numeric suffix, capture 4 + 5i
				|\b(char|varchar\d?)\b(?:\((\d+)\))?

				# special case, capture 6 + 7i + 8i
				|\b(numeric)\b(?:\((\d+),(\d+)\))?

				# special case, captures 9, 10i, 11
				|\b(times)(?:\((\d+)\))(\swithoutstimeszone\b)?

				# special case, captures 12, 13, 14i, 15
				|\b(timestamp)(?:(s)\((\d+)\)(\swithoutstimeszone\b)?)?

			</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b((?:primary|foreign)\s+key|references|on\sdelete(\s+cascade)?|check|constraint)\b)</string>
					<key>name</key>
					<string>storage.modifier.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d+\b</string>
					<key>name</key>
					<string>constant.numeric.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=^|[^\w\.@])@\w+</string>
					<key>name</key>
					<string>variable.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+\.</string>
					<key>name</key>
					<string>entity.name.alias.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(select(\s+distinct)?|insert\s+(ignore\s+)?into|insert|update|with|delete|from|join|set|print|declare|open|close|fetch|deallocate|cursor|for|while|case|when|then|between|is|exec|execute|where|group\sby|or|like|and|not|exists|union(\s+all)?|having|order\sby|over|limit|(inner|cross)\s+join|(outer|cross)\s+apply|straight_join|(left|right)(\s+outer)?\s+join|natural(\s+(left|right)(\s+outer)?)?\s+join)\b)</string>
					<key>name</key>
					<string>keyword.other.DML.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(null)\b)</string>
					<key>name</key>
					<string>constant.language.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(on|((is\s+)?not\s+)?null)\b)</string>
					<key>name</key>
					<string>keyword.other.DDL.create.II.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\bvalues\b)</string>
					<key>name</key>
					<string>keyword.other.DML.II.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Reserved keywords: https://msdn.microsoft.com/en-us/library/ms189822.aspx</string>
					<key>match</key>
					<string>(?i:\b(add|external|procedure|all|fetch|public|alter|file|raiserror|and|fillfactor|read|any|for|readtext|as|foreign|reconfigure|asc|freetext|references|authorization|freetexttable|replication|backup|from|restore|begin|full|restrict|between|function|return|break|goto|revert|browse|grant|revoke|bulk|group|right|by|having|rollback|cascade|holdlock|rowcount|case|identity|rowguidcol|check|identity_insert|rule|checkpoint|identitycol|save|close|if|schema|clustered|in|securityaudit|coalesce|index|select|collate|inner|semantickeyphrasetable|column|insert|semanticsimilaritydetailstable|commit|intersect|semanticsimilaritytable|compute|into|session_user|constraint|is|set|contains|join|setuser|containstable|key|shutdown|continue|kill|some|convert|left|statistics|create|like|system_user|cross|lineno|table|current|load|tablesample|current_date|merge|textsize|current_time|national|then|current_timestamp|nocheck|to|current_user|nonclustered|top|cursor|not|tran|database|null|transaction|dbcc|nullif|trigger|deallocate|of|truncate|declare|off|try_convert|default|offsets|tsequal|delete|on|union|deny|open|unique|desc|opendatasource|unpivot|disk|openquery|update|distinct|openrowset|updatetext|distributed|openxml|use|double|option|user|drop|or|values|dump|order|varying|else|outer|view|end|over|waitfor|errlvl|percent|when|escape|pivot|where|except|plan|while|exec|precision|with|execute|primary|within group|exists|print|writetext|exit|proc)\b)</string>
					<key>name</key>
					<string>keyword.other.reserved.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Control-of-flow keywords: https://msdn.microsoft.com/en-us//library/ms174290.aspx</string>
					<key>match</key>
					<string>(?i:\b(BEGIN|END|RETURN|break|THROW|CONTINUE|TRY|CATCH|GOTO|WAITFOR|IF|ELSE|WHILE)\b)</string>
					<key>name</key>
					<string>keyword.other.reserved.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Label:</string>
					<key>match</key>
					<string>^(.+):\s*$</string>
					<key>name</key>
					<string>support.label.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(begin\s+try|begin\s+catch|end\s+try|end\s+catch|begin\s+tran|begin\s+transaction|begin(\s+work)?|raiserror(\s+work)?|rollback\s+tran|commit(\s+work)?|rollback(\s+work)?|if(\s+work)?|goto|end(\s+work)?|else(\s+work)?|return)\b)</string>
					<key>name</key>
					<string>keyword.other.LUW.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)</string>
					<key>name</key>
					<string>keyword.other.authorization.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:\bin\b)</string>
					<key>name</key>
					<string>keyword.other.data-integrity.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:^\s*(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)</string>
					<key>name</key>
					<string>keyword.other.object-comments.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bAS\b</string>
					<key>name</key>
					<string>keyword.other.alias.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(DESC|ASC)\b</string>
					<key>name</key>
					<string>keyword.other.order.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\*</string>
					<key>name</key>
					<string>keyword.operator.star.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[!&lt;&gt;]?=|&lt;&gt;|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.comparison.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-|\+|/</string>
					<key>name</key>
					<string>keyword.operator.math.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\|</string>
					<key>name</key>
					<string>keyword.operator.concatenator.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Rowset functions: https://msdn.microsoft.com/en-us/library/ms187957.aspx</string>
					<key>match</key>
					<string>(?i)\b(opendatasource|openrowset|openquery|openxml)\b</string>
					<key>name</key>
					<string>support.function.rowset.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Aggregate Functions: https://msdn.microsoft.com/en-us/library/ms173454.aspx</string>
					<key>match</key>
					<string>(?i)\b(avg|min|checksum_agg|sum|count|stdev|count_big|stdevp|grouping|var|grouping_id|varp|max)\b</string>
					<key>name</key>
					<string>support.function.aggr.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Ranking Functions: https://msdn.microsoft.com/en-us/library/ms189798.aspx</string>
					<key>match</key>
					<string>(?i)\b(rank|ntile|dense_rank|row_number)\b</string>
					<key>name</key>
					<string>support.function.ranking.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Configuration Functions: https://msdn.microsoft.com/en-us/library/ms173823.aspx</string>
					<key>match</key>
					<string>(?i)@@\b(datefirst|options|dbts|remserver|langid|servername|language|servicename|lock_timeout|spid|max_connections|textsize|max_precision|version|nestlevel)\b</string>
					<key>name</key>
					<string>support.function.config.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Conversion Functions: https://msdn.microsoft.com/en-us/library/hh231076.aspx</string>
					<key>match</key>
					<string>(?i)\b(cast|convert|parse|try_cast|try_convert|try_parse)\b</string>
					<key>name</key>
					<string>support.function.rowset.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Cursor Functions: https://msdn.microsoft.com/en-us/library/ms186285.aspx</string>
					<key>match</key>
					<string>(?i)(@@\b(cursor_rows|fetch_status)|cursor_status)\b</string>
					<key>name</key>
					<string>support.function.cursor.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Date and time Functions: https://msdn.microsoft.com/en-us/library/ms186724.aspx</string>
					<key>match</key>
					<string>(?i)\b(sysdatetime|sysdatetimeoffset|sysutcdatetime|current_timestamp|getdate|getutcdate|datename|datepart|day|month|year|datefromparts|datetime2fromparts|datetimefromparts|datetimeoffsetfromparts|smalldatetimefromparts|timefromparts|datediff|dateadd|eomonth|switchoffset|todatetimeoffset|isdate)|@@\b(datefirst|language)\b</string>
					<key>name</key>
					<string>support.function.datetime.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Logical Functions: https://msdn.microsoft.com/en-us/library/hh213226.aspx</string>
					<key>match</key>
					<string>(?i)\b(choose|iif)\b</string>
					<key>name</key>
					<string>support.function.logical.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Mathematical Functions: https://msdn.microsoft.com/en-us/library/ms177516.aspx</string>
					<key>match</key>
					<string>(?i)\b(abs|degrees|rand|acos|exp|round|asin|floor|sign|atan|log|sin|atn2|log10|sqrt|ceiling|pi|square|cos|power|tan|cot|radians)\b</string>
					<key>name</key>
					<string>support.function.math.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Metadata Functions: https://msdn.microsoft.com/en-us/library/ms187812.aspx</string>
					<key>match</key>
					<string>(?i)@@\b(procid)|\b(index_col|app_name|indexkey_property|applock_mode|indexproperty|applock_test|next value for|assemblyproperty|object_definition|col_length|object_id|col_name|object_name|columnproperty|object_schema_name|database_principal_id|objectproperty|databasepropertyex|objectpropertyex|db_id|original_db_name|db_name|parsename|file_id|schema_id|file_idex|schema_name|file_name|scope_identity|filegroup_id|serverproperty|filegroup_name|stats_date|filegroupproperty|type_id|fileproperty|type_name|fulltextcatalogproperty|typeproperty|fulltextserviceproperty)\b</string>
					<key>name</key>
					<string>support.function.metadata.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Security Functions: https://msdn.microsoft.com/en-us/library/ms186236.aspx</string>
					<key>match</key>
					<string>(?i)\b(certencoded|pwdcompare|certprivatekey|pwdencrypt|current_user|schema_id|database_principal_id|schema_name|session_user|suser_id|suser_sid|has_perms_by_name|suser_sname|is_member|system_user|is_rolemember|suser_name|is_srvrolemember|user_id|original_login|user_name|permissions)\b</string>
					<key>name</key>
					<string>support.function.security.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>String Functions: https://msdn.microsoft.com/en-us/library/ms181984.aspx</string>
					<key>match</key>
					<string>(?i)\b(ascii|ltrim|soundex|char|nchar|space|charindex|patindex|str|concat|quotename|stuff|difference|replace|substring|format|replicate|unicode|left|reverse|upper|len|right|lower|rtrim)\b</string>
					<key>name</key>
					<string>support.function.string.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>System Functions: https://msdn.microsoft.com/en-us/library/ms187786.aspx</string>
					<key>match</key>
					<string>(?i)\$\b(partition)|@@\b(error|identity|pack_received|rowcount|trancount)|\b(error_severity|error_state|formatmessage|getansinull|get_filestream_transaction_context|host_id|binary_checksum|host_name|checksum|isnull|connectionproperty|isnumeric|context_info|min_active_rowversion|current_request_id|newid|error_line|newsequentialid|error_message|rowcount_big|error_number|xact_state|error_procedure)\b</string>
					<key>name</key>
					<string>support.function.system.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>System Statistical Functions: https://msdn.microsoft.com/en-us/library/ms177520.aspx</string>
					<key>match</key>
					<string>(?i)@@\b(connections|pack_received|cpu_busy|pack_sent|timeticks|idle|total_errors|io_busy|total_read|packet_errors|total_write)\b</string>
					<key>name</key>
					<string>support.function.system-stats.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Text and image Functions: https://msdn.microsoft.com/en-us/library/ms188353.aspx</string>
					<key>match</key>
					<string>(?i)\b(patindex|textvalid|textptr)\b</string>
					<key>name</key>
					<string>support.function.text_image.sql</string>
				</dict>
			</array>
		</dict>
		<key>tsql_comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(--).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.c</string>
				</dict>
			</array>
		</dict>
		<key>tsql_label_goto</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.goto_label.sql</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>goto Label</string>
			<key>match</key>
			<string>(?&lt;=goto)\s+(\w+)</string>
		</dict>
		<key>tsql_regexps</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/(?=\S.*/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tsql_string_interpolation</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\/</string>
							<key>name</key>
							<string>constant.character.escape.slash.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%r\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>We should probably handle nested bracket pairs!?! -- Allan</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.modr.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tsql_string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tsql_string_escape</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.sql</string>
		</dict>
		<key>tsql_string_interpolation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#\{)([^\}]*)(\})</string>
			<key>name</key>
			<string>string.interpolated.sql</string>
		</dict>
		<key>tsql_strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#biml-expression-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tsql_string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#biml-expression-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tsql_string_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
					<key>match</key>
					<string>(")[^"#]*(")</string>
					<key>name</key>
					<string>string.quoted.double.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#biml-expression-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tsql_string_interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.other.quoted.brackets.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#biml-expression-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tsql_string_interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tsql_table_alias</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=from|join)\s*</string>
			<key>end</key>
			<string>(?=\n|,|with|outer|inner|left|right|cross|where|join|on)</string>
			<key>name</key>
			<string>meta.alias.sql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.table.sql</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.temp.table.sql</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.alias-as.other.sql</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.alias.sql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@\w+)|(#{1,2}\w+)|[\w\.\]\[]+)\s+(as\s+)?(?!=\n|,|with|outer|inner|left|right|cross|where|join|on)(\w+)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tsql_comments</string>
				</dict>
			</array>
		</dict>
		<key>xml</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#xml-literal-keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#xml-core</string>
				</dict>
			</array>
		</dict>
		<key>xml-core</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;\?)\s*([-_a-zA-Z0-9]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\?&gt;)</string>
					<key>name</key>
					<string>meta.tag.preprocessor.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string> ([a-zA-Z-]+)</string>
							<key>name</key>
							<string>entity.other.attribute-name.xml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#doublequotedString</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#singlequotedString</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#biml-expression-block</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;!)(DOCTYPE)\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.doctype.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.documentroot.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*(&gt;)</string>
					<key>name</key>
					<string>meta.tag.sgml.doctype.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#internalSubset</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;[!%]--</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>--%?&gt;</string>
					<key>name</key>
					<string>comment.block.xml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(&lt;)((?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+))(?=(\s[^&gt;]*)?&gt;&lt;/\2&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.localname.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)(&lt;)(/)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml meta.scope.between-tag-pair.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.localname.xml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.xml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.no-content.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tagStuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?!&lt;/?DirectInput&gt;)(&lt;/?)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.xml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.namespace.xml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.xml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.namespace.xml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.localname.xml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.xml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tagStuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#entity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bare-ampersand</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#Cdata</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.biml</string>
	<key>uuid</key>
	<string>d37386b9-9758-409b-953e-c37244c9b498</string>
</dict>
</plist>
